---
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Serverless Express Application/API powered by API Gateway and Lambda
Parameters:
  DynamoStack:
    Type: "String"
    Description: "Stack containing all the Dynamo Definitions"

Resources:
  APIGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      DefinitionUri: ./simple-proxy-api.yaml
      StageName: prod
      Variables:
        CustomerLambdaFunctionName: !Ref CustomerLambda
        OrderLambdaFunctionName: !Ref OrderLambda

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: root
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: arn:aws:logs:*:*:*
          - Effect: Allow
            Action:
            - dynamodb:*
            Resource: !Join
              - ''
              - - 'arn:aws:dynamodb:'
                - !Ref AWS::Region
                - ":"
                - !Ref AWS::AccountId
                - ":table"
                - "/*"

  CustomerLambdaApiGatewayExecutionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt CustomerLambda.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Join
        - ''
        - - 'arn:aws:execute-api:'
          - !Ref AWS::Region
          - ":"
          - !Ref AWS::AccountId
          - ":"
          - !Ref APIGatewayApi
          - "/*/*"

  CustomerLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./customers-lambda
      Handler: lambda.handler
      MemorySize: 1024
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: nodejs6.10
      Timeout: 30
      Events:
        ProxyApiRoot:
          Type: Api
          Properties:
            RestApiId: !Ref APIGatewayApi
            Path: /customers
            Method: ANY
        ProxyApiGreedy:
          Type: Api
          Properties:
            RestApiId: !Ref APIGatewayApi
            Path: /customers/{proxy+}
            Method: ANY
      Environment:
        Variables:
          TABLE_NAME:
            Fn::ImportValue:
              Fn::Sub: "${DynamoStack}-CustomerDynamoDBTable"

  OrderLambdaApiGatewayExecutionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt OrderLambda.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Join
        - ''
        - - 'arn:aws:execute-api:'
          - !Ref AWS::Region
          - ":"
          - !Ref AWS::AccountId
          - ":"
          - !Ref APIGatewayApi
          - "/*/*"

  OrderLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./orders-lambda
      Handler: lambda.handler
      MemorySize: 1024
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: nodejs6.10
      Timeout: 30
      Events:
        ProxyApiRoot:
          Type: Api
          Properties:
            RestApiId: !Ref APIGatewayApi
            Path: /orders
            Method: ANY
        ProxyApiGreedy:
          Type: Api
          Properties:
            RestApiId: !Ref APIGatewayApi
            Path: /orders/{proxy+}
            Method: ANY

Outputs:
  LambdaFunctionConsoleUrl:
    Description: Console URL for the Lambda Function.
    Value: !Join
      - ''
      - - https://
        - !Ref AWS::Region
        - ".console.aws.amazon.com/lambda/home?region="
        - !Ref AWS::Region
        - "#/functions/"
        - !Ref CustomerLambda

  ApiUrl:
    Description: Invoke URL for your API. Clicking this link will perform a GET request
      on the root resource of your API.
    Value: !Join
      - ''
      - - https://
        - !Ref APIGatewayApi
        - ".execute-api."
        - !Ref AWS::Region
        - ".amazonaws.com/prod/"
